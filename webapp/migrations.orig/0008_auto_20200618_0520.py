# Generated by Django 2.2 on 2020-06-18 05:20

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webapp', '0007_livedata_systime'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(blank=True, max_length=30, null=True)),
                ('serial_num', models.CharField(blank=True, max_length=40, null=True)),
                ('datetime', models.CharField(max_length=40)),
                ('record_type', models.CharField(blank=True, max_length=5, null=True)),
                ('glucose', models.IntegerField(blank=True, null=True)),
                ('glucose_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('scang', models.IntegerField(blank=True, null=True)),
                ('scang_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('rai', models.IntegerField(blank=True, null=True)),
                ('rai_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('food', models.CharField(blank=True, max_length=20, null=True)),
                ('carbs', models.IntegerField(blank=True, null=True)),
                ('carbs_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('lai', models.IntegerField(blank=True, null=True)),
                ('lai_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('stripg', models.IntegerField(blank=True, null=True)),
                ('stripg_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('ketone', models.IntegerField(blank=True, null=True)),
                ('ketone_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('mi', models.IntegerField(blank=True, null=True)),
                ('mi_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('ci', models.IntegerField(blank=True, null=True)),
                ('ci_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('uci', models.IntegerField(blank=True, null=True)),
                ('uci_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('when', models.DateTimeField()),
                ('who', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activity2ActivityLogDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'activity_2_activity_log_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityAction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'activity_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityHow',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'activity_how',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'activity_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLogDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('value', models.IntegerField()),
                ('radius', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'activity_log_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityRecommended',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity_recommended',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'activity_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'activity_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('when', models.DateTimeField()),
                ('who', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'batch_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatchState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'batch_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('interval_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
                ('percent', models.IntegerField(blank=True, null=True)),
                ('state_percent', models.IntegerField(blank=True, null=True)),
                ('learned_percent', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'forecast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastLearned',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
                ('low', models.IntegerField()),
                ('high', models.IntegerField()),
            ],
            options={
                'db_table': 'forecast_learned',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
                ('low', models.IntegerField()),
                ('high', models.IntegerField()),
            ],
            options={
                'db_table': 'forecast_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Glucose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField()),
                ('value', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'glucose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlucoseMode',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'glucose_mode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'live_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NsActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.IntegerField(blank=True, null=True)),
                ('sgv', models.IntegerField(blank=True, null=True)),
                ('delta', models.IntegerField()),
                ('systime', models.DateTimeField(blank=True, db_column='sysTime', null=True)),
                ('device', models.CharField(blank=True, max_length=30, null=True)),
                ('direction', models.CharField(blank=True, max_length=20, null=True)),
                ('utcoffset', models.IntegerField(blank=True, db_column='utcOffset', null=True)),
                ('when', models.DateTimeField()),
                ('who', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'ns_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms', models.IntegerField()),
                ('advertising', models.IntegerField()),
                ('partners', models.IntegerField()),
                ('research', models.IntegerField()),
            ],
            options={
                'db_table': 'privacy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.CharField(max_length=255)),
                ('handle', models.CharField(max_length=255)),
                ('secret', models.CharField(max_length=255)),
                ('issued', models.IntegerField()),
                ('lifetime', models.IntegerField()),
                ('assoc_type', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'social_auth_association',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=254)),
                ('code', models.CharField(max_length=32)),
                ('verified', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'social_auth_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthNonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_url', models.CharField(max_length=255)),
                ('timestamp', models.IntegerField()),
                ('salt', models.CharField(max_length=65)),
            ],
            options={
                'db_table': 'social_auth_nonce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthPartial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32)),
                ('next_step', models.PositiveSmallIntegerField()),
                ('backend', models.CharField(max_length=32)),
                ('data', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'social_auth_partial',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialAuthUsersocialauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=32)),
                ('uid', models.CharField(max_length=255)),
                ('extra_data', models.TextField()),
            ],
            options={
                'db_table': 'social_auth_usersocialauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User2ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_2_activity_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User2ActivityRecommended',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_2_activity_recommended',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User2Forecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_2_forecast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User2Glucose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_2_glucose',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='ColorScheme',
        ),
        migrations.DeleteModel(
            name='Correlation',
        ),
        migrations.DeleteModel(
            name='Frame',
        ),
        migrations.DeleteModel(
            name='Function',
        ),
        migrations.DeleteModel(
            name='Post',
        ),
        migrations.DeleteModel(
            name='Product',
        ),
        migrations.DeleteModel(
            name='State',
        ),
        migrations.AlterModelOptions(
            name='indicator',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='livedata',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'managed': False},
        ),
    ]
